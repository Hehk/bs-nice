// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

import * as Jest    from "bs-jest/lib/es6/src/jest.js";
import * as Nice    from "../src/nice.js";
import * as Block   from "bs-platform/lib/es6/block.js";
import * as Hashtbl from "bs-platform/lib/es6/hashtbl.js";

function serialized_rule_cache() {
  return Hashtbl.fold((function (k, v, acc) {
                return /* :: */[
                        /* tuple */[
                          k,
                          v
                        ],
                        acc
                      ];
              }), Nice.rule_cache, /* [] */0);
}

function serialized_global_cache() {
  return Hashtbl.fold((function (k, v, acc) {
                return /* :: */[
                        /* tuple */[
                          k,
                          v
                        ],
                        acc
                      ];
              }), Nice.global_cache, /* [] */0);
}

describe("Nice", (function () {
        afterEach(Nice.flush);
        Jest.test("css", (function () {
                return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](/* tuple */[
                                Nice.css(/* :: */[
                                      /* Display */Block.__(0, [/* Flex */5]),
                                      /* :: */[
                                        /* Width */Block.__(1, [/* Px */Block.__(0, [23])]),
                                        /* [] */0
                                      ]
                                    ]),
                                serialized_rule_cache(/* () */0)
                              ]));
              }));
        return Jest.test("global", (function () {
                      Nice.$$global("html, body", /* :: */[
                            /* Padding */Block.__(18, [/* Px */Block.__(0, [20])]),
                            /* [] */0
                          ]);
                      return Jest.Expect[/* toMatchSnapshot */16](Jest.Expect[/* expect */0](serialized_global_cache(/* () */0)));
                    }));
      }));

export {
  serialized_rule_cache   ,
  serialized_global_cache ,
  
}
/*  Not a pure module */
